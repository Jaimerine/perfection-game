//fonts
@import url('https://fonts.googleapis.com/css2?family=Walter+Turncoat&display=swap');
@import url('https://use.typekit.net/uwd4uqm.css');

//sass files
@import './_setup.scss';
@import './_variables.scss';
@import './_mixins.scss';


/* ||||||||||| BASE ||||||||||| */

* {
    perspective: 100px;
}

html {
    font-size: 62.5%;
    scroll-behavior: smooth;
}

body {
    background-color: $background;
}

//react root div
body > div {
    @include flex--justify-align-wrap(true);
}

.wrapper {
    max-width: 795px;
    margin: 0 auto;
}

.page {
    @include flex--justify-align-wrap(false, true);
    flex-direction: column;
    width: 100vw;
}

main {
    width: 100%;
}

h1 {
    color: $yellow-light;
    font-family: $game-font;
    transform: scaleY(1.5); //increase font height
    margin: 0px;
    text-shadow: 2px 1.5px 0px $blue-text-shadow;
    font-size: 4.2rem;
    margin: 18px 0;

    //add fluid font sizing
    @include phone {
        & {
            font-size: 7vw;
            line-height: auto;
        }
    }

    @include small-phone {
        & {
            font-size: 6vw;
            margin: 10px 0 0px;
        }
    }
}

h2 {
    color: $red-light;
    @include fluid-font-size(3rem, 4rem);
    font-family: $paper-font;
    text-decoration: underline;
    text-decoration-thickness: 2px;
    margin: 5px 0 23px;
}

header {
    text-align: right;
    position: relative;
    background: $blue-light;
    border-radius: 8px;
    border: solid 5px $yellow-light;
    padding: 5px 15px 2px;
    @include flex--justify-align-wrap(false);
    justify-content: space-between;
    flex-direction: column;
    box-shadow: 1.1px 1.1px 0px black;
}

p, ul, ol, label, input, form > button {
    font-family: $paper-font;         
    color: $blue-dark;
    @include fluid-font-size(1.7rem, 2.2rem);
    line-height: 3.7rem;
}

ul {
    padding: 0;
    list-style: none;
}

a {
    text-decoration: none;
    color: $blue-dark;
}

button {
    transform: perspective(10px) translateZ(0px);
    transition: transform 0.8s linear forwards;
    border-radius: 5px;
    outline: none;
    border: none;
    padding: 9px 13px;

    //reduce button size
    @include small-phone {
        & {
            padding: 6px 10px;
        }
    }
}

button:hover, button:focus {
    transform: perspective(10px) translateZ(-1px);
}


/* ||||||||||| NAV ||||||||||| */

nav {
    ul {
        list-style: none;
        font-family: $game-font;
        font-size: 2.1rem;
        line-height: 38px;
        padding: 0;
        margin: 0;
        margin-left: 10px;
        @include animated-underline($yellow-light, 'li');

        //MQs: add fluid font sizing, adjust padding
        @include phone {
            & {
                font-size: 3.5vw;
                line-height: unset;

                > li {
                    padding: 5px 0;
                }
            }
        }

        @include small-phone {
            & {
                font-size: 4vw;
            }
        }

        @include xs-phone {
            & {
                padding: 5px 0 2px;
            }
        }
    }
}


/* ||||||||||| BASE GAME ||||||||||| */

.top-container {
    @include flex--justify-align-wrap(false);
    padding: 20px 0 0;

    //MQs: wrap tray under game
    @include tablet {
        & {
            @include flex--justify-align-wrap(true, false, true);
        }
    }

    @include phone {
        & {
            padding: 5%;
        }
    }
}

.game {
    max-width: 518px;
}

.outer-game {
    background-color: $red-light;
    padding: 25px 25px 1px;
    border-radius: 2%;
    box-shadow: 0px 2px 0px 0px $red-light, 0px 2px 5px 0px $red-med-shadow, 0px 11px 6px 8px $red-med-shadow, 0px 12px 0px 14px $red-dark-shadow, 0px 12px 0px 14px $red-dark, 11px 16px 30px 10px #1c1b1bbf;

    //MQ: adjust padding
    @include phone {
        & {
            padding: 4.5vw 3vw 1px;
        }
    }
}

//start button and nav links container
.nav-container {
    align-self: flex-end;
    @include flex--justify-align-wrap(false);
    justify-content: space-between;
    align-items: flex-end;
    margin: 5px 0 10px;
    position: relative;
    width: 60%;

    li:nth-child(2) {
        margin-top: 3px;
    }

    .arrow {
        width: 50px;
        position: absolute;
        top: 65px;
        left: 24px;
        fill: $yellow-light;
        z-index: 20;
        filter: drop-shadow(2px 2px 0px $blue-text-shadow);
        animation: bounce 2s ease infinite;
        transform: translateZ(10px);
    }

    button {
        margin: 9px 2px 20px 11px;
        background-color: $red-light;
        color: $yellow-light;
        font-family: $game-font;
        font-size: 1.5rem;
        letter-spacing: 1px;
        box-shadow: 3px 3px 0px 1px $red-dark;
    }

    //MQs: change alignment of nav links + start button
    @include phone {
        & button {
            margin: 0px 2px 5px 0px;
            font-size: 3.2vw;
        }

        & .arrow {
            left: 11px;
        }
    }

    @include small-phone {
        & {  
            margin: 10px 0 5px;
            justify-content: flex-end;
            flex-wrap: wrap;
            flex-direction: column-reverse;
        }
        
        & button {
            margin: 4px 0px 8px 0px;
            font-size: 3.2vw;
            box-shadow: 2px 2px 0px 1px $red-dark;
        }

        & .arrow {
            rotate: 90deg; //firefox
            transform: rotate(90deg);
            width: 32px;
            top: unset;
            bottom: 8px;
            left: unset;
            right: 74px;
        }

        & li:nth-child(2) {
            margin-top: 0px;
        }
    }

    @include xs-phone {
        & {
            margin: 5px 0 0px;
        }
        
        & .arrow {
            width: 30px;
        }
    }
}

//animation for arrow
@keyframes bounce {
	0%, 20%, 50%, 80%, 100% {transform: translateY(0);}
	40% {transform: translateY(-15px);}
	60% {transform: translateY(-15px);}
}

//timer container
div.timer {
    position: relative;
    width: 165px;
    top: 8px;
    left: -5px;
    @include flex--justify-align-wrap(true, true);
    align-self: flex-start;

    //timer animation (class added at game start)
    .start {
        animation: ticking 20s linear forwards;
        transform-origin: 46.5% 50%;
        transform-box: border-box;
    }

    //MQs: adjust position + size of timer images
    @include phone {
        & {
            width: 38%;
            top: 2px;
        }
    }

    @include small-phone {
        & {
            width: 48%;
            top: 38px;
            left: -1px;
        }
    }

    @include xs-phone {
        & {
            width: 54%;
            top: 36px;
            left: -8px;
        }
    }

    //outer timer image
    img:nth-child(1) {
        position:absolute;
        width: 110%;
    }

    //inner timer image
    img:nth-child(2) {
        position: absolute;
        width: 80%;
    }
}

@keyframes ticking {
    from {transform: rotate(0deg);}
    to {transform: rotate(360deg);}
}


/* ||||||||||| GAME DROP ZONE ||||||||||| */

//overall drop container
.drop-elements {
    @include flex--justify-align-wrap(true, false, true);
    background-color: $blue-light;
    box-shadow:inset $blue-dark-shadow 4px 3px 1px, -1px -7px 3px $blue-med-shadow, -3px -6px 3px $blue-dark, 0px 0px 4px .1px $blue-med-shadow, 0px 0px 1px $blue-dark-shadow;
    padding: 10px;
    margin: 30px auto 20px;
    width: 460px;
    height: 340px;

    > div {
        width: calc(100% / 4);
        height: calc(100% / 3);
    }

    //MQ: adjust size of container
    @include phone {
        & {
            padding: 1.5%;
            width: 80vw;
            height: 62vw;
            margin: 20px auto 10px;
        }
    }
}

//individual drop containers
.drop-container {
    background-color: $blue-light;
    width: 88%;
    height: 88%;
    margin: 7px;
    padding: 5px 0 0 5px;
    @include flex--justify-align-wrap(true, true);
    box-shadow: inset $blue-dark-shadow 4px 1px 1px, -1px -6px 3px $blue-med-shadow, -2.5px -7px 3px $blue-dark,0px 0px 4px 0.1px $blue-med-shadow;

    //drop container shapes
    > svg:first-child {
        fill: $blue-light;
        filter: drop-shadow($blue-dark-shadow 2px 3px 0px) drop-shadow(-2px -5px 1.5px $blue-med-shadow) drop-shadow(-3.6px -3px 1px $blue-dark);
        position: absolute;

        @include small-phone {
            filter: drop-shadow($blue-dark-shadow 2px 3px 0px) drop-shadow(-2px -3px 1.5px $blue-med-shadow) drop-shadow(-3px -2px 1px $blue-dark);
        }
    }

    //drop container shapes when piece dropped
    &.dropped > svg:first-child {
        filter: drop-shadow(3px 6px 2px $blue-dark);
        fill: $yellow-light;
    }

    @include phone {
        & {
            margin: 5px;
        }
    }
}

/* ||||||||||| GAME PIECES ||||||||||| */

//tray pieces are on
.drag-tray {
    margin: 6px 0 0 45px;
    background-color: $red-light;
    @include flex--justify-align-wrap(false);
    justify-content: space-around;
    padding: 15px;
    border-radius: 10px;
    box-shadow: 0px 0px 0px 8px rgba(247, 22, 22, 0.78), inset 5px 5px 10px 20px rgba(159, 5, 5, 0.49);
    width: 230px;
    height: 617px;

    //MQs: ajdust tray sizing when wrapped under game
    @include tablet {
        & {
            margin: 45px 0 0;
            width: 520px;
            height: 350px;
            padding: 15px 20px 25px;
        }
    }

    @include phone {
        height: 315px;
        padding: 10px 12px 12px;
    }

    @include small-phone {
        height: 280px;
    }

    @include xs-phone {
        height: 250px;
    }
}

//overall piece container
.drag-elements {
    @include flex--justify-align-wrap(false, false, true);
    width: calc((100px + 5px) * 2);
    justify-content: space-between;
    height: 100%;
    width: 100%;

    //individual piece containers
    > div {
        height: calc(100% / 6);
        width: calc(100% / 2);

        //MQs: adjust piece container sizing
        @include tablet {
            & {
                height: calc((100% / 3) - 16px);
                width: calc((100% / 4) - 16px);
                margin: 8px;
            }
        }

        @include phone {
            & {
                height: calc((100% / 3) - 12px);
                width: calc((100% / 4) - 12px);
                margin: 6px;
            }
        }

        @include small-phone {
            & {
                height: calc((100% / 3));
                width: calc((100% / 4));
                margin: 0;
            }
        }
    }
}

//drag shapes
.drag-container {
    width: 100%;
    height: 100%;

    //shape image
    > svg:first-child {
        filter: drop-shadow(3px 3px 0px $yellow-dark) drop-shadow(2px 2px 0px $yellow-dark) drop-shadow(3px 3px 0px $yellow-dark);
        fill: $yellow-light;
        margin: 10px;
        z-index: 10;
        position: absolute;
        @include flex--justify-align-wrap(true);
        animation: wiggle 1s ease infinite;
        transform-origin: 50% 50%;

        //MQ: reduce drop shadow
        @include small-phone {
            & {
                filter: drop-shadow(2px 2px 0px $yellow-dark) drop-shadow(1px 1px 0px $yellow-dark) drop-shadow(2px 2px 0px $yellow-dark)
            }
        }
    }

    //drag handle
    .handle {
        position: absolute;
        z-index: 20;
        top: 33%;
        left: 34%;
        width: 25%;
        fill: $yellow-light;
        filter: drop-shadow(0px 0px 1px $yellow-dark) drop-shadow(5px 5px 0 $yellow-dark);

        //MQs: re-align handle in center of shape
        @include tablet {
            & {
                top: 38%;
            }
        }

        @include phone {
            & {
                top: 37%;
                left: 35%;
                filter: drop-shadow(0px 0px 1px $yellow-dark) drop-shadow(4px 4px 0 $yellow-dark);
            }
        }

        @include small-phone {
            & {
                top: 34%;
            }
        }
    }    
}

//drag shape animation at rest
@keyframes wiggle {
    0% { transform: scale(0.95, 1.05) rotate(-2deg) skewX(1); }
    25% { transform: scale(1.05, 1) rotate (0deg); }
    50% { transform: scale(1, 0.95) rotate (5deg); }
    75% { transform: scale(0.95, 1) rotate(0deg); }
    100% { transform: scale(1, 0.95) rotate(-2deg) skewX(-1); }
}

//class added on game over to "pop" pieces off
.fly {
    animation: fly 1s ease-out forwards;
}

//animation on game over
@keyframes fly {
	from { transform: translateZ(0px); }
	to { transform: translateZ(150px); }
}

//piece when dropped
.dropped {
    .drag-container {
        
        margin-left: -5px;
        margin-top: -5px;
        > svg:first-child  {
            filter: drop-shadow(0px 0px 1px $yellow-light) drop-shadow(1px 1px 0px $yellow-dark) drop-shadow(1px 1px 0px $yellow-dark) drop-shadow(2px 2px 2px $blue-dark);
            position: unset;
            animation: unset;
        }

        .handle  {
            top: 29%;
            left: 37%;
        }
    }
}


/* ||||||||||| LEADERBOARD + INSTRUCTIONS SECTIONS  ||||||||||| */

.leaderboard.paper {
    @include tablet {
        & {
            margin: 30px auto 20px;
        }
    }
}

/* leading dots modified from: https://www.w3.org/Style/Examples/007/leaders.en.html */
ul.leaders {

    span {
        line-height: 24px;
    }
    
    li:before {
        float: left;
        width: 0;
        white-space: nowrap;
        color: $blue-dark;
        font-size: 3rem;
        margin-top: -8px;
        content:
        "........................................"
        "........................................"
        "........................................"
        "........................................"
        "........................................";
    }

    span:first-child {
        padding-right: 0.33rem;
        background: white;
    }

    span + span {
        float: right;
        padding-left: 0.33rem;
        background: white;
        margin-top: 8px;
    }
}

/* paper effect modified from: https://codepen.io/amwill/pen/YyexrJ */
.paper {
    min-height: 200px;
    background: white;
    box-shadow: 0px 0px 5px 0px #888;
    margin: 75px auto 20px;

    ol li:not(li:last-of-type) {
        padding-bottom: 36px;
    }

    //MQ: reduce width
    @include tablet {
        & {
            width: 90vw;
        }
    }
}

.paper::before {
    content: '';
    position: absolute;
    left: 45px;
    height: calc(100% + 20px);
    width: 2px;
    background: rgba(255,0,0,0.4);
    z-index: 10;

    //MQs: move red line
    @include xs-phone {
        & {
            left: 32px;
        }
    }
}

.lines {
    margin-top: 55px;
    height: 100%;
    width: 100%;
    background-image: repeating-linear-gradient(white 0px, white 35px, $blue-light 37px);
    position: absolute;
    top: 0;
}

.text {
    position: relative;
    top: 17px;
    left: 55px;
    bottom: 10px;
    right: 10px;
    line-height: 25px;
    overflow: hidden;
    outline: none;
    z-index: 20;
    padding: 20px 0 0;
    width: 88%;

    //MQs: reduce width
    @include tablet {
        & {
            width: 83%
        }
    }

    @include small-phone {
        & {
            width: 76%
        }
    }

    //MQs: move red line
    @include xs-phone {
        & {
            left: 45px;
        }
    }
}

/* /||||||||||| MODAL ||||||||||| */

//background
.modal {
    position: fixed;
    z-index: 30;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto;
    background-color: rgba(0, 0, 128,.50)
}

//content
.modal-content {
    background-color: $blue-light;
    color: $blue-dark;
    margin: 10% auto;
    padding: 55px;
    border: 4px solid $yellow-light;
    border-radius: 10px;
    width: 50%;
    position: relative;

    p {
        line-height: 2.5rem;
    }

    //MQ: increase width
    @include tablet {
        & {
            width: 90%;
            padding: 40px 25px 25px;
        }
    }
}

//close button
.modal-close {
    color: $blue-dark;
    font-size: 6rem;
    position: absolute;
    top: 0;
    right: 16px;
    transform: perspective(10px) translateZ(0px);
    transition: color 0.3s ease, transform 0.3s linear;
    white-space: nowrap;
    border-radius: unset;
    background-color: transparent;
    font-family: unset;
    box-shadow: unset;
    margin: 0;
    padding: 0;
    z-index: 40;

    //MQ: decrease size of close
    @include tablet {
        & {
            font-size: 4rem;
        }
    }
}

.modal-close:hover, .modal-close:focus {
    color: $yellow-light;
    text-decoration: none;
    transform: perspective(10px) translateZ(2px);
} 

form {
    @include flex--justify-align-wrap(false, true);
    flex-direction: column;
    padding-top: 10px;

    input {
        margin: 10px 0 25px;
        border: $yellow-light 4px solid;
        border-radius: 5px;
        padding: 5px;
    }

    button {
        width: 98%;
        background-color: $yellow-light;
        box-shadow: 3px 3px 0px 1px $yellow-dark;
        margin: 0 0 20px;
    }

    label {
        align-self: flex-start;
    }

    button, input {
        width: 98%;
    }

    button, label {
        line-height: 2.6rem;
    }

}



/* /||||||||||| FOOTER ||||||||||| */

footer {
    margin-top: 60px;
    text-align: center;
    border-top: $blue-dark 4px solid;
    width: 100%;
    padding: 20px 5px 20px;
    @include animated-underline(red, 'span');

    p {
        margin-bottom:2px;
    }

    a {
        color: $red-light;
    }
}